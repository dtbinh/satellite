function q = R2q(R,option,type)
switch type 
    case 'wxyz' 
        switch option
            case 'tsf'
                % [James_Diebel] % Stable
                if R(2,2)>-R(3,3)&&R(1,1)>-R(2,2)&&R(1,1)>-R(3,3)
                    q = 0.5*[         (1+R(1,1)+R(2,2)+R(3,3))^0.5            ;
                              (R(2,3)-R(3,2))/((1+R(1,1)+R(2,2)+R(3,3))^0.5)  ;
                              (R(3,1)-R(1,3))/((1+R(1,1)+R(2,2)+R(3,3))^0.5)  ;
                              (R(1,2)-R(2,1))/((1+R(1,1)+R(2,2)+R(3,3))^0.5)  ];

                elseif R(2,2)<-R(3,3)&&R(1,1)>R(2,2)&&R(1,1)>R(3,3)
                    q = 0.5*[ (R(2,3)-R(3,2))/((1+R(1,1)-R(2,2)-R(3,3))^0.5)  ;
                                      (1+R(1,1)-R(2,2)-R(3,3))^0.5            ;
                              (R(1,2)+R(2,1))/((1+R(1,1)-R(2,2)-R(3,3))^0.5)  ;
                              (R(3,1)+R(1,3))/((1+R(1,1)-R(2,2)-R(3,3))^0.5)  ];

                elseif R(2,2)>R(3,3)&&R(1,1)<R(2,2)&&R(1,1)<-R(3,3)
                    q = 0.5*[ (R(3,3)-R(1,3))/((1-R(1,1)+R(2,2)-R(3,3))^0.5)  ;      
                              (R(1,2)+R(2,1))/((1-R(1,1)+R(2,2)-R(3,3))^0.5)  ;
                                      (1-R(1,1)+R(2,2)-R(3,3))^0.5            ;
                              (R(2,3)+R(3,2))/((1-R(1,1)+R(2,2)-R(3,3))^0.5)  ];

                elseif R(2,2)<R(3,3)&&R(1,1)<-R(2,2)&&R(1,1)<R(3,3)
                    q = 0.5*[ (R(1,2)-R(2,1))/((1-R(1,1)-R(2,2)+R(3,3))^0.5)  ;
                              (R(3,1)+R(1,3))/((1-R(1,1)-R(2,2)+R(3,3))^0.5)  ;
                              (R(2,3)+R(3,2))/((1-R(1,1)-R(2,2)+R(3,3))^0.5)  ;
                                      (1-R(1,1)-R(2,2)+R(3,3))^0.5            ];
                end

            case 'rot'
                R(4,4)   = trace(R);
                [Rmax,i] = max( [R(1,1) R(2,2) R(3,3) R(4,4)] );
                p_i      = sqrt(1+2*R(i,i)-R(4,4));
                

                if i==1
                    
                   p1 = p_i;
                   p2 = (R(2,1)+R(1,2))/p_i;
                   p3 = (R(1,3)+R(3,1))/p_i;
                   p4 = (R(3,2)-R(2,3))/p_i;
                elseif i==2
                    
                   p1 = (R(2,1)+R(1,2))/p_i;
                   p2 = p_i;
                   p3 = (R(3,2)+R(2,3))/p_i;
                   p4 = (R(1,3)-R(3,1))/p_i;
                elseif i==3
                    
                   p1 = (R(1,3)+R(3,1))/p_i;
                   p2 = (R(3,2)+R(2,3))/p_i;   
                   p3 = p_i;
                   p4 = (R(2,1)-R(1,2))/p_i;   
                else
                   p1 = (R(3,2)-R(2,3))/p_i;
                   p2 = (R(1,3)-R(3,1))/p_i;
                   p3 = (R(2,1)-R(1,2))/p_i;   
                   p4 = p_i;
                end

                q = 0.5*[p4 p1 p2 p3]';
                q = q/(q'*q);
            
            otherwise
        end
        
    case 'xyzw'  
        switch option
            case 'tsf'
                q(4) = 0.5*sqrt(R(1,1)+R(2,2)+R(3,3)+1);
                q(1) = (R(2,3)-R(3,2))/4/q(4);
                q(2) = (R(3,1)-R(1,3))/4/q(4);
                q(3) = (R(1,2)-R(2,1))/4/q(4);
                
                q = q';
            case 'rot'
                R(4,4)   = trace(R);
                [Rmax,i] = max( [R(1,1) R(2,2) R(3,3) R(4,4)] );
                p_i      = sqrt(1+2*R(i,i)-R(4,4));

                if i==1
                   p4 = p_i;
                   p1 = (R(2,1)+R(1,2))/p_i;
                   p2 = (R(1,3)+R(3,1))/p_i;
                   p3 = (R(3,2)-R(2,3))/p_i;
                elseif i==2
                   p4 = (R(2,1)+R(1,2))/p_i;
                   p1 = p_i;
                   p2 = (R(3,2)+R(2,3))/p_i;
                   p3 = (R(1,3)-R(3,1))/p_i;
                elseif i==3
                   p4 = (R(1,3)+R(3,1))/p_i;
                   p1 = (R(3,2)+R(2,3))/p_i;   
                   p2 = p_i;
                   p3 = (R(2,1)-R(1,2))/p_i;   
                else
                   p4 = (R(3,2)-R(2,3))/p_i;
                   p1 = (R(1,3)-R(3,1))/p_i;
                   p2 = (R(2,1)-R(1,2))/p_i;   
                   p3 = p_i;
                end

                q = 0.5*[p4 p1 p2 p3]';
                q = q/(q'*q);
            otherwise
        end
        
        
    otherwise
        

end